<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>随笔20201113</title>
      <link href="202011132330.html"/>
      <url>202011132330.html</url>
      
        <content type="html"><![CDATA[<p>今天，突然得到消息，高中同学Y过世了。我和Y其实不是很熟，但印象中他是一个很友善的人。消息来得很突然，又让我想起了之前的那段日子。</p><a id="more"></a><p>在我生病之前，我一直以为死亡离我们很远，从来没有想过这个问题。</p><p>17年，我躺在病床上的时候，又突然觉得死亡离我很近。当时我以为我应该会是我们这一群人里最早离世的。那时的躺在床上，只有一个手机陪伴，有太多的时间胡思乱想，想象着我走之后，周边的人的反应，没有太多的恐惧，只是有一些遗憾。</p><p>后来，病情好转，人也可以开始走动，开始有了病友，也就不再想起死亡的事情。其实，医院里面经常能听到谁谁谁又不好了，谁谁谁不来治疗了，但是不知为何，总觉得我和这些人并不一样，现在想来可能是年龄上的差异导致的吧。当和我同龄的病友离世的时候，我还是很受触动，一种说不清楚的感觉。</p><p>结束治疗后，回到学校，准备毕业论文，找工作，踏上工作岗位，可能是刻意为之，我慢慢地忘记了那段岁月，也不再思考死亡的问题。</p><p>直到今天，听到Y的消息，之前那种说不清楚的感觉又重新回来了。</p><p>愿世界能够善待每一个善良的人。<br>原每一个善良的你能够被世界温容以待。<br>最后，早点休息。<br><img src="/images/20201113.jpg" alt="好好休息"></p>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>调用potplayer播放emby（二）</title>
      <link href="202007062131.html"/>
      <url>202007062131.html</url>
      
        <content type="html"><![CDATA[<p>之前写了一篇如何<a href="https://blog.mrjiumi.cn/202002121619.html">调用potplayer播放emby</a>的文章，虽然基本实现了功能，但是操作比较复杂，也存在一定的局限（不能播放H265编码视频）。<br>经过不懈努力，终于找到了另一种调用的方式，下面介绍给大家。</p><a id="more"></a><h2 id="Emby-Theater-for-Windows"><a href="#Emby-Theater-for-Windows" class="headerlink" title="Emby Theater for Windows"></a>Emby Theater for Windows</h2><p>emby有一个很大的优势就是全平台，这个全平台不仅仅是服务端，客户端也是。<br><img src="../images/%E8%B0%83%E7%94%A8potplayer%E6%92%AD%E6%94%BEemby%E8%A7%86%E9%A2%91%EF%BC%88%E4%BA%8C%EF%BC%89/%E5%AE%A2%E6%88%B7%E7%AB%AF%E4%B8%80%E8%A7%88.png" alt="客户端一览"><br>这次调用的关键就在于Emby Theater for Windows(<a href="https://embydata.com/downloads/theater/release13/setup.exe" target="_blank" rel="noopener">点击下载</a>)。<br>Emby Theater for Windows是emby官方的windows客户端，界面和网页版类似,操作逻辑也与网页版一致，无任何上手难度。<br><img src="../images/%E8%B0%83%E7%94%A8potplayer%E6%92%AD%E6%94%BEemby%E8%A7%86%E9%A2%91%EF%BC%88%E4%BA%8C%EF%BC%89/embytheater%E7%95%8C%E9%9D%A2.png" alt="embytheater界面"></p><p>但是，Emby Theater for Windows有一个致命的缺点，导致它的覆盖率一直不广，那就是这个软件必须订阅emby premiere才能播放视频，没有会员订阅的用户只能<strong>试播一分钟</strong>。<br><img src="../images/%E8%B0%83%E7%94%A8potplayer%E6%92%AD%E6%94%BEemby%E8%A7%86%E9%A2%91%EF%BC%88%E4%BA%8C%EF%BC%89/%E9%9C%80%E8%A6%81%E8%AE%A2%E9%98%85.png" alt="需要订阅"><br><img src="../images/%E8%B0%83%E7%94%A8potplayer%E6%92%AD%E6%94%BEemby%E8%A7%86%E9%A2%91%EF%BC%88%E4%BA%8C%EF%BC%89/%E8%AF%95%E6%92%AD%E4%B8%80%E5%88%86%E9%92%9F.png" alt="试播一分钟"><br>正是这<strong>试播一分钟</strong>给我们留下了机会，亲测试播一分钟只针对官方播放器限制，选用第三方播放器（potplayer等）完全不受一分钟时间的限制，可谓是一举两得，既破解了没有premiere订阅的时常限制，又拜托了鸡肋的官方播放器，调用功能强大的第三方播放器播放。</p><h2 id="调用第三方播放器设置"><a href="#调用第三方播放器设置" class="headerlink" title="调用第三方播放器设置"></a>调用第三方播放器设置</h2><p>在Emby Theater for Windows里调用第三方播放器的方法也十分简单，<code>设置-External Player</code>就可以直达添加第三方播放器的页面。<br><img src="../images/%E8%B0%83%E7%94%A8potplayer%E6%92%AD%E6%94%BEemby%E8%A7%86%E9%A2%91%EF%BC%88%E4%BA%8C%EF%BC%89/%E8%AE%BE%E7%BD%AE.png" alt="设置"><br><img src="../images/%E8%B0%83%E7%94%A8potplayer%E6%92%AD%E6%94%BEemby%E8%A7%86%E9%A2%91%EF%BC%88%E4%BA%8C%EF%BC%89/%E6%B7%BB%E5%8A%A0.png" alt="添加"><br>在添加的页面中，添加第三方播放器的路径和命令行参数就可以了。</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">播放器路径:</span> <span class="string">C:\Program</span> <span class="string">Files\DAUM\PotPlayer\PotPlayerMini64.exe</span>  <span class="comment">#Potplayer默认安装位置</span></span><br><span class="line"><span class="string">命令行参数：&#123;path&#125;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 建站 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> emby </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>调用poplayer播放emby</title>
      <link href="202002121619.html"/>
      <url>202002121619.html</url>
      
        <content type="html"><![CDATA[<p>一直使用emby，主要是因为免费，虽然更新到4.0之后免费版已经不能硬解了，但好在我网速还行，看的视频码率比较低，不需要转码播放。但最近更新之后，网页版的播放体验越来越差了，这菜单贼老大，菜单隐藏情况下还不能通过按键来调节进度，所以尝试用potplayer来播放emby视频。</p><a id="more"></a><h1 id="1-原理"><a href="#1-原理" class="headerlink" title="1. 原理"></a>1. 原理</h1><p>potplayer可以打开链接播放，所以只要能够获取emny的播放链接，就能够利用potplayer来播放emby视频了。<br>分析下来主要有以下几个问题需要解决：</p><ol><li>获取emby的视频链接</li><li>如何方便地从浏览器调用emby</li></ol><h2 id="获取emby视频链接"><a href="#获取emby视频链接" class="headerlink" title="获取emby视频链接"></a>获取emby视频链接</h2><p>我们打开emby的一个视频，按F12打开开发者工具，就能找到视频链接，在标签下的src属性中。这样我们就获取了视频链接。<br><fancybox><img src='..\images\调用potplayer播放emby视频\获取视频url.jpg'></fancybox></p><h2 id="调用emby播放链接"><a href="#调用emby播放链接" class="headerlink" title="调用emby播放链接"></a>调用emby播放链接</h2><p>potplayer自带了打开链接的功能，如下图所示，也可以参考网上用potplayer看直播的教程。</p><p><fancybox><img src='..\images\调用potplayer播放emby视频\potpalyer打开链接示意.png'></fancybox><br>这样，就完成了用potplayer播放视频，但是过程太过去繁琐。整个流程需要很多操作。都说懒是第一生产力，因而想办法简化流程。</p><h1 id="2-利用chrome插件来简化流程"><a href="#2-利用chrome插件来简化流程" class="headerlink" title="2. 利用chrome插件来简化流程"></a>2. 利用chrome插件来简化流程</h1><p>首先想到的就是利用chrome插件来自动化处理，通过插件来自动识别emby的链接，并调用potplayer播放。<br>识别链接网上有很多成功的插件；而调用potplayer，可以利用外部协议url，通过写注册表将url与本地应用程序关联。potplayer安装时自动写入了注册表，所以只需要在浏览器内输入 <code>potplayer://+url</code> 就能够利用potplayer来打开视频了，效果如下：<br><fancybox><img src='..\images\调用potplayer播放emby视频\浏览器打开potplayer.png'></fancybox><br>所以只需要编写chrome插件，识别链接，并打开新标签页，就能够一步实现用potplayer看emby视频了。<br>兴奋的我立马开始研究如何写chrome插件，奈何自己没有基础，不会js，折腾了一整晚也没有成功，最后只能选择对别人的插件进行修改。（请参考<a href="https://cloud.tencent.com/developer/article/1028111" target="_blank" rel="noopener">如何修改下载的插件</a>）。</p><p>这里我选取了<a href="https://www.94cat.com/" target="_blank" rel="noopener">笨笨猫</a>编写的<a href="https://chrome.google.com/webstore/detail/%E7%8C%AB%E6%8A%93/jfedfbgedapdagkghmgibemcoggfppbb?hl=zh-CN" target="_blank" rel="noopener">猫抓</a>，这个插件能够直接获取页面上的视频链接，对于emby的链接也能够有效获取，并且对单个视频提供了调用html视频播放器播放视频的按钮，改起来也较为方便。<br>猫抓插件使用效果<br><fancybox><img src='..\images\调用potplayer播放emby视频\猫抓使用效果.png'></fancybox></p><p>更改的方法就是找到原有插件中播放按钮的代码，改为上文提到的打开 <code>potplayer://+url</code> 就可以了。具体代码如下。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//播放</span></span><br><span class="line">$(<span class="string">'#medialist #play'</span>).off().on(<span class="string">'click'</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> url = $(<span class="keyword">this</span>).parents().find(<span class="string">'.url a'</span>).attr(<span class="string">'href'</span>);</span><br><span class="line">  chrome.tabs.create(&#123;</span><br><span class="line">    url: <span class="string">"potplayer://"</span> + url</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">&#125;];</span><br></pre></td></tr></table></figure><p>最后，刷新一下插件，大功告成。</p><h1 id="3-后话"><a href="#3-后话" class="headerlink" title="3. 后话"></a>3. 后话</h1><p>其实，除了emby，很多别的视频流也能够通过potplayer来播放，但是现在chrome的插件库中都是提取视频链接下载视频的，却没有调用本地播放器来播放视频的，希望能够有大神解决这个问题。</p><h1 id="4-存在问题"><a href="#4-存在问题" class="headerlink" title="4. 存在问题"></a>4. 存在问题</h1><p>使用一段时间后发现，这种方法只适用于H264编码的视频，对于H265(HEVC)的视频，emny会分割成多个小的ts文件来传输，而不是一整个文件，因而没办法用potplayer直接播放到底。</p>]]></content>
      
      
      <categories>
          
          <category> 建站 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> emby </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo的渲染问题</title>
      <link href="201911030029.html"/>
      <url>201911030029.html</url>
      
        <content type="html"><![CDATA[<p>记录在修改主题时碰到的<em>奇怪</em>的问题</p><a id="more"></a><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>hexo默认会渲染<code>/source/</code>文件夹中所有的md和html文件，为了解决这个问题，hexo提供了以下两种解决方法；</p><ol><li><p>通过在<code>_config.yml&#39;中添加</code>skip_render`字段来避免对于这类文件的渲染，如  </p> <figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">skip_render:</span> <span class="string">XXX/*</span></span><br></pre></td></tr></table></figure></li><li><p>通过在文件的头部添加<code>layout</code>字段来阻止渲染，如</p> <figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">layout:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">XXX</span></span><br><span class="line"><span class="attr">tags:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">tag_a</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">tag_b</span></span><br></pre></td></tr></table></figure></li></ol><p>然而在这次问题中，两种方式都无法解决渲染的问题。</p><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>最后发现是`themes/material-X/_config.yml’的问题。material-X中默认的sidebar设置是这样的：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">menu_desktop:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">示例</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">fas</span> <span class="string">fa-grin</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">/</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">分类</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">fas</span> <span class="string">fa-folder-open</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">blog/categories/</span></span><br><span class="line">    <span class="attr">rel:</span> <span class="string">nofollow</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">标签</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">fas</span> <span class="string">fa-hashtag</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">blog/tags/</span></span><br><span class="line">    <span class="attr">rel:</span> <span class="string">nofollow</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">归档</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">fas</span> <span class="string">fa-archive</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">blog/archives/</span></span><br><span class="line">    <span class="attr">rel:</span> <span class="string">nofollow</span></span><br></pre></td></tr></table></figure><p>会增加一个blog文件夹，为使各菜单也能够正确显示，有两种方式：</p><ol><li><p>在<code>source</code>文件夹中添加<code>blog</code>文件夹，再创建<code>catagories</code>文件夹及<code>index.md</code>文件放入<code>blog</code>中。  </p></li><li><p>删除<code>_config.yml</code>中的blog字段，如：</p> <figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">menu_desktop:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">首页</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">fas</span> <span class="string">fa-grin</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">/</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">分类</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">fas</span> <span class="string">fa-folder-open</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">categories/</span></span><br><span class="line">    <span class="attr">rel:</span> <span class="string">nofollow</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">标签</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">fas</span> <span class="string">fa-hashtag</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">tags/</span></span><br><span class="line">    <span class="attr">rel:</span> <span class="string">nofollow</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">归档</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">fas</span> <span class="string">fa-archive</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">archives/</span></span><br><span class="line">    <span class="attr">rel:</span> <span class="string">nofollow</span></span><br></pre></td></tr></table></figure></li></ol><p>实测，使用方案1会导致停止渲染失效，使用方案二则完美解决该问题。</p>]]></content>
      
      
      <categories>
          
          <category> 建站 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo安装与迁移</title>
      <link href="201910272343.html"/>
      <url>201910272343.html</url>
      
        <content type="html"><![CDATA[<p>记录一下hexo安装与迁移过程中遇到的坑。</p><a id="more"></a><h1 id="1-hexo的基础用法"><a href="#1-hexo的基础用法" class="headerlink" title="1. hexo的基础用法"></a>1. hexo的基础用法</h1><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>安装hexo，参考<a href="https://hexo.io/zh-cn/docs/#%E5%AE%89%E8%A3%85-Hexo" target="_blank" rel="noopener">hexo官网</a><br>在 <code>_config.yml</code> 中添加deploy参数：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">type:git</span><br><span class="line">repo:</span><br><span class="line">github1: [url1],[branch]</span><br><span class="line">github2: [url2],[branch]</span><br></pre></td></tr></table></figure><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">hexo init             <span class="comment">#在当前文件夹下面创建hexo网站</span></span><br><span class="line">hexo server -p xxxx   <span class="comment">#创建本地服务器</span></span><br><span class="line">hexo generate         <span class="comment">#生成hexo网页内容</span></span><br><span class="line">hexo deploy           <span class="comment">#将当前的内容发布到_config.yml中的delpoy网站</span></span><br><span class="line">hexo g -d             <span class="comment">#生成并发布</span></span><br><span class="line">hexo d -g             <span class="comment">#生成并发布</span></span><br><span class="line">hexo new [title]      <span class="comment">#新建一篇名为title的文章</span></span><br></pre></td></tr></table></figure><h1 id="2-hexo与hexo-cli的区别"><a href="#2-hexo与hexo-cli的区别" class="headerlink" title="2. hexo与hexo-cli的区别"></a>2. hexo与hexo-cli的区别</h1><h3 id="部署时的问题"><a href="#部署时的问题" class="headerlink" title="部署时的问题"></a>部署时的问题</h3><p>部署时，按照<a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">hexo.io</a>的教程，安装完git和node.js后，用语句<code>npm install -g hexo-cli</code>安装了hexo。但是部署了出现了错误，deploy后网站首页变成了错误文字。</p><h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><p>在解决这个问题时发现，有hexo和hexo-cli两个库，hexo自带deploy工具，而hexo-cli还需要安装<code>hexo-deployer-git</code>库来实现通过git部署网站。<br>最终，安装hexo后，解决了部署出错的问题。</p><p><strong>这只是一种猜测，具体原因还有待研究</strong><br>**</p><h1 id="3-新安装hexo的注意事项"><a href="#3-新安装hexo的注意事项" class="headerlink" title="3. 新安装hexo的注意事项"></a>3. 新安装hexo的注意事项</h1><p>在电脑上安装好hexo后，需要到hexo的文件夹下面，执行 <code>npm install</code> 的命令。这样，npm会根据文件夹下面package.json文件下的内容，将需要的hexo等库安装到文件夹中。</p>]]></content>
      
      
      <categories>
          
          <category> 建站 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>远程桌面——随时随地操控家里的电脑</title>
      <link href="201909032146.html"/>
      <url>201909032146.html</url>
      
        <content type="html"><![CDATA[<p>你有没有这种困扰，笔记本性能不够，不能够运行你所需要的软件，而台式机又不能随身携带。这种时候，远程桌面是解决你困扰的好方法。</p><a id="more"></a><h2 id="1-为什么用远程桌面，而不用Teamviewer-向日葵-QQ远程控制"><a href="#1-为什么用远程桌面，而不用Teamviewer-向日葵-QQ远程控制" class="headerlink" title="1. 为什么用远程桌面，而不用Teamviewer/向日葵/QQ远程控制"></a>1. 为什么用远程桌面，而不用Teamviewer/向日葵/QQ远程控制</h2><p>目前市场上有许多远程控制的软件，包括Teamviewer、向日葵、QQ远程控制等等。但这些软件有一定的缺陷。</p><ol><li><p>收费<br>对于一个我这种穷人来说，能不花钱解决的问题一律不花一分钱。如果你能接受的花钱的话，Teamviewer和向日葵这些软件是相当优异的，能狗实现无人值守，甚至内网穿透。即装即用，十分便捷。如果你和我一样，不能接受收费软件，那就只能自己折腾。</p></li><li><p>无法实现无人值守<br>免费软件如QQ远程桌面等安装便捷，也不需要调试，但是它无法实现无人值守。远程控制时需要被控制电脑点击接受方可操作。存在较大的局限性。</p></li></ol><p>因而推荐使用免费的RDP（Remote Desktop Protocol）软件，其实RDP软件也有很多种。鉴于微软在windows上自带了《远程桌面》，推荐直接选用了系统自带的<code>远程桌面</code>。</p><h2 id="2-基本要求"><a href="#2-基本要求" class="headerlink" title="2. 基本要求"></a>2. 基本要求</h2><h3 id="2-1-windows专业版"><a href="#2-1-windows专业版" class="headerlink" title="2.1. windows专业版"></a>2.1. windows专业版</h3><p>windows普通家庭版不支持远程桌面，因而被操作端的电脑必须是Windows企业版之类的。<br><em>别的版本我没有测试过，大家可以自行尝试或者百度</em></p><h3 id="2-2-外网可访问"><a href="#2-2-外网可访问" class="headerlink" title="2.2 外网可访问"></a>2.2 外网可访问</h3><p>为了能实现随时随地远程操作，必须要保证在外网环境可以访问你的电脑，分为两种情况。</p><ul><li><p>有公网IP&amp;端口转发<br>——如果你的网络有公网IP，且你有操控设置端口转发的权力，那么恭喜你，你选到了easy难度。只需简单操作就能实现远程访问了。</p></li><li><p>无公网IP&amp;端口转发<br>——如果你的网络没有公网IP，或者你没有路由的控制权限，无法设置端口转发，那么你只能通过<code>内网穿透</code>的方法来实现了，难度比较大，网速也可能会有一定影响，但至少你还是可以实现功能的。</p></li></ul><h2 id="3-windows开启远程桌面"><a href="#3-windows开启远程桌面" class="headerlink" title="3. windows开启远程桌面"></a>3. windows开启远程桌面</h2><h3 id="3-1-windows设置"><a href="#3-1-windows设置" class="headerlink" title="3.1 windows设置"></a>3.1 windows设置</h3><p>由于远程桌面是Windows内置的软件，因而开启十分方便，在设置界面中选择<code>系统——远程桌面</code>就可以了.</p><ol start="2"><li>无法实现无人值守<br>免费软件如QQ远程桌面等安装便捷，也不需要调试，但是它无法实现无人值守。远程控制时需要被控制电脑点击接受方可操作。存在较大的局限性。<br>因而推荐使用免费的RDP（Remote Desktop Protocol）软件，其实RDP软件也有很多种。鉴于微软在windows上自带了《远程桌面》，推荐直接选用了系统自带的 <strong>《远程桌面》</strong>。</li></ol><p><img src="../images/20190903/%E5%BC%80%E5%90%AF%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2.jpg" alt="开启远程桌面"></p>]]></content>
      
      
      <categories>
          
          <category> 建站 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 远程桌面 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>通过车辆位置数据来统计交通量</title>
      <link href="201906091500.html"/>
      <url>201906091500.html</url>
      
        <content type="html"><![CDATA[<p>以往的交通调查往往通过人工方式，在需要调查的交叉口安排调查人员，统计经过的车辆数。费时费力，效率低，成本高。<br>现在摄像头运用越来越广，交叉口基本都布设的摄像头。并通过强大的图像识别算法能够记录交叉口的车辆信息，包括车牌号、车型等。<br>因而考虑是否可以通过利用区域内所有交叉口的摄像头，识别车辆位置信息，计算车辆的路径，并基于车辆路径来统计交通量。</p><a id="more"></a><h2 id="0-前言"><a href="#0-前言" class="headerlink" title="0. 前言"></a>0. 前言</h2><p>本文基于之前</p><h2 id="1-原始数据介绍"><a href="#1-原始数据介绍" class="headerlink" title="1. 原始数据介绍"></a>1. 原始数据介绍</h2><p>我拿到手的数据已经经过处理，处理的过程主要是通过软件来对交叉口的路线进行车辆识别，最终导出车辆的交叉口位置表，表结构大致如下。  </p><table><thead><tr><th>ID</th><th>plate_no</th><th>veh_type</th><th>pass_time</th><th>c_name</th><th>direction</th></tr></thead><tbody><tr><td>001</td><td>车牌A</td><td>车型</td><td>时间A</td><td>交叉口A</td><td>朝向</td></tr></tbody></table><h2 id="2-对数据进行预处理"><a href="#2-对数据进行预处理" class="headerlink" title="2. 对数据进行预处理"></a>2. 对数据进行预处理</h2><p>原始数据中存在一些问题，比如车型分类过细，交叉口存在重复命名，朝向存在重复明明，<code>pass_time</code>字段为字符串格式等。</p><ol><li><p>将原始数据导入oracle数据库中，注意选择数据类型</p></li><li><p>利用<code>replace</code>，<code>case when</code>，<code>substr</code>等函数对原始数据进行预处理，并实现时间段的分类<br>交通调查一般只取早晚高峰的小时流量。</p></li><li><p>利用<code>listagg</code>函数来实现按车辆统计路径</p> <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">listagg(c_name) within group (order by pass_time_ss) c_list</span><br><span class="line">from xxx group by plate_no</span><br></pre></td></tr></table></figure></li></ol><h2 id="3-通过路径来计算交叉口流量"><a href="#3-通过路径来计算交叉口流量" class="headerlink" title="3. 通过路径来计算交叉口流量"></a>3. 通过路径来计算交叉口流量</h2>]]></content>
      
      
      <categories>
          
          <category> 交通 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 交通 </tag>
            
            <tag> 数据处理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我那个叫小黑的朋友</title>
      <link href="201905261633.html"/>
      <url>201905261633.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>‘我有个朋友叫小黑。你没有猜错，就是比较黑，所以才叫小黑。</p></blockquote><p>小黑是个神奇的人物。是我身边不多几个由<strong>屌丝</strong><br>奋斗变成<strong>高富帅</strong>的人。</p><hr><a id="more"></a><h2 id="我哩个乖"><a href="#我哩个乖" class="headerlink" title="我哩个乖"></a>我哩个乖</h2><p>如果把我认识的小黑分成三个阶段。那么我想为第一个阶段起名<code>我哩个乖</code>。<br>第一次见到小黑时，他是个淳朴的乡村孩子，操着一口亲切的“我哩个乖”。那时的我还不知道这句话在皖北的流行程度，我第一次听到“我哩个乖”这句口头禅时，就觉得这句话很牛逼。尤其是从小黑口中蹦出的“我哩个乖”，淳朴中带着一丝逗逼，早在当年我就看出他会是逗逼界的可塑之才。<br>后来，我慢慢发现“我哩个乖”远比我想象地要<del>牛逼</del>厉害，它可以表示惊讶，可以表示兴奋，可以表示愤怒，可以表示各种情绪，简直就像万能的<code>kao</code>一样。当我听到小黑和他老乡单单通过这句话完成一整段通话时，我对这句口头禅更是佩服得五体投地。<br>“我哩个乖”很好地体现了小黑当初的<del>逗逼</del>淳朴形象。这份淳朴可能让小黑闹了很多笑话，吃了很多不必要的亏。但也是这份淳朴让小黑能够为断腿的同学连续送两个月的饭。</p><hr><h2 id="你的裤子不错！"><a href="#你的裤子不错！" class="headerlink" title="你的裤子不错！"></a>你的裤子不错！</h2><blockquote><p>小黑：你的裤子不错！<br>友人A：“恩，谢谢。”<br>两分钟后<br>小黑：“你今天裤子挺好看的。<br>友人A看了看自己穿了好几天的裤子：“恩，我知道了。”<br>又两分钟后<br>小黑：“你就没有什么要和我说的吗？”<br>友人A思考了许久：“你的裤子不错？”<br>小黑相当兴奋，“你终于看到我的新裤子啦！”</p></blockquote><p>从此，我对小黑刮目相看。<br>不知道从什么时候开始，小黑变了。以前的小黑给人最大的印象是淳朴，进化后的小黑，给人的印象则是逗逼。当然小黑进化的不仅仅是逗逼能力。当我听闻小黑在数学竞赛得奖的时候，我才发现，小黑的进化是全方面的。<br>其实我一直不知道小黑蜕变的契机是什么？是远超常人的努力？还是异于常人的天赋？可能两者都有。<br>我记得高中时我们班有一个很<del>牛逼</del>厉害的同学：在我们刚开始复习时，他已经把整套龙门专题数学都看完了，那时候我连龙门是啥都不知道；作为物理班的同学，分班后仍然能够代表学校参加化学竞赛获奖，兼职是神一样的存在。最恐怖的是，这么牛逼的任务，已经拉开我们那么多了，还比我们努力，高三前那个暑假刷了n多复习资料，不服不行。小黑可能也是这样的人。或者说，是个<strong>低配版的厉害的同学？</strong></p><hr><p>to be continue</p><p>PS，小黑目前单身，预购从速！<br>感兴趣的可以直接在评论区留言。<br>2016.11.11更新：此款宝贝已下架！</p>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 我那些神奇的朋友 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>gitee pages无法deploy的问题</title>
      <link href="201905261251.html"/>
      <url>201905261251.html</url>
      
        <content type="html"><![CDATA[<p>目前hexo主要的用途在于做了一个静态页面个手机浏览器做导航。因而对于访问的速度要求比较高。手机打开github pages时会比较慢，因而在gitee上也部署了hexo。<br>然而在电脑上通过<code>hexo deploy</code>命令部署网页时，github pages能顺利更新，gitee pages并没有更新。 </p><a id="more"></a><h2 id="创建过程"><a href="#创建过程" class="headerlink" title="创建过程"></a>创建过程</h2><ol><li><p>在gitee上导入github仓库</p></li><li><p>设定pages的分支</p></li><li><p>本地git增加gitee的远程仓库</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$git</span> add remote [remote name] [remote url]</span><br></pre></td></tr></table></figure><p> 只是部署的话并不需要添加远程仓库</p></li><li><p>在_config.yml中添加deploy信息</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">type: git</span><br><span class="line">repo:</span><br><span class="line">    [name1]: [url],[branch]</span><br><span class="line">    [name2]: [url],[branch]</span><br></pre></td></tr></table></figure></li></ol><h2 id="出现的问题"><a href="#出现的问题" class="headerlink" title="出现的问题"></a>出现的问题</h2><p>deploy后网页不更新</p><ul><li><p>github pages页面<br><img src="../images/github.png" alt="github pages"></p></li><li><p>gitee pages页面<br><img src="../images/gitee.png" alt="gitee pages"></p></li></ul><p>添加新文章后，也不会增加新文章。但是查看仓库，发现仓库已经更新，只是网页没有重新部署。</p><h2 id="尝试解决"><a href="#尝试解决" class="headerlink" title="尝试解决"></a>尝试解决</h2><p>在<code>gitee——服务——Gitee Pages</code>中选择<code>重新部署</code>，网页更新。</p><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>发现gitee pages和github不同，自动部署需要Gitee Pages Pro.<br><img src="../images/gitee_pages_pro.png" alt="gitee pages pro"></p>]]></content>
      
      
      <categories>
          
          <category> 建站 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> gitee </tag>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第一篇文章</title>
      <link href="201904181708.html"/>
      <url>201904181708.html</url>
      
        <content type="html"><![CDATA[<h2 id="第一篇文章"><a href="#第一篇文章" class="headerlink" title="第一篇文章"></a>第一篇文章</h2><blockquote><p>万事开头难</p></blockquote><p>利用github pages搭建了一个博客。希望能够养成记录的习惯。</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
